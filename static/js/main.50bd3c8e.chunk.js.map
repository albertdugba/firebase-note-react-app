{"version":3,"sources":["components/Firebase.js","components/Navbar.js","components/Welcome.js","components/Home.js","components/FormError.js","components/RegisterUser.js","components/NoteList.js","components/Notes.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","GoogleAuthProvider","Navbar","_this$props","this","props","userName","logOutUser","react_default","a","createElement","className","es","to","onClick","event","Component","Welcome","Home","FormError","msgError","RegisterUser","state","displayName","email","passwordOne","passwordTwo","errorMsg","loading","errorTime","onTimeout","_this","setState","onChange","target","name","value","Object","defineProperty","onSubmit","preventDefault","registrationInfo","password","createUserWithEmailAndPassword","then","registerUser","catch","error","message","navigate","components_FormError","timeout","htmlFor","type","placeholder","NoteList","notes","myNotes","map","item","key","notesID","notesName","Notes","noteName","addNotes","length","components_NoteList","Login","signedInInfo","signInWithEmailAndPassword","App","user","userID","onAuthStateChanged","firebaseUser","updateProfile","uid","database","ref","concat","push","signOut","_this2","on","snapshot","val","notesList","noteID","howManyNotes","components_Navbar","components_Welcome","components_Home","path","components_RegisterUser","components_Notes","components_Login","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.50bd3c8e.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport \"firebase/auth\";\n\nvar config = {\n  apiKey: \"AIzaSyApUQ2w09VxholeaQ6i2zG7xLbCkMtL4O8\",\n  authDomain: \"note-react-app-1b304.firebaseapp.com\",\n  databaseURL: \"https://note-react-app-1b304.firebaseio.com\",\n  projectId: \"note-react-app-1b304\",\n  storageBucket: \"\",\n  messagingSenderId: \"70125977560\",\n  appId: \"1:70125977560:web:c06e94c462f4c7a1\"\n};\n// Initialize Firebase\n\nfirebase.initializeApp(config);\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const auth = firebase.auth();\n\nexport default firebase;\n","import React, { Component } from \"react\";\nimport { Link } from \"@reach/router\";\nimport \"../App.css\";\n\nclass Navbar extends Component {\n  render() {\n    const { userName, logOutUser } = this.props;\n    return (\n      <div className=\"main-header\">\n        <div className=\"brand\">\n          <Link to=\"/\">\n            <i className=\"fas fa-clipboard \" />\n            {\"\"}\n            Note app\n          </Link>\n        </div>\n        <div className=\"nav-items\">\n          {userName && <Link to=\"/notes\">ALl Notes</Link>}\n          {userName && (\n            <Link to=\"/login\" onClick={event => logOutUser(event)}>\n              Logout\n            </Link>\n          )}\n          {!userName && <Link to=\"/\">Home</Link>}\n          {!userName && <Link to=\"/register\">Register</Link>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\n\nclass Welcome extends Component {\n  render() {\n    const { userName } = this.props;\n    return (\n      <div className=\"text-center container\">\n        <span>\n          Welcome <strong>{userName}</strong>\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default Welcome;\n","import React, { Component } from \"react\";\nimport { Link } from \"@reach/router\";\nimport \"../App.css\";\n\nclass Home extends Component {\n  render() {\n    const { userName } = this.props;\n    return (\n      <div className=\"home-container\">\n        <div>\n          {\" \"}\n          <h1>\n            <i className=\"fas fa-pen\" /> Note Taking Application!\n          </h1>\n          <p>\n            Lorem Ipsum is simply dummy text of the printing and typesetting\n            industry. Lorem Ipsum has been the industry standard dummy text ever\n            since the 1500s, when an unknown printer took a galley of type and\n            scrambled it to make a type specimen book.\n          </p>\n        </div>\n        {userName && (\n          <Link to=\"/login\" className=\"btn-link\">\n            All Notes\n          </Link>\n        )}\n        {!userName && (\n          <Link to=\"/register\" className=\"btn-link\">\n            Register\n          </Link>\n        )}\n        {!userName && (\n          <Link to=\"/login\" className=\"btn-link space\">\n            Log In\n          </Link>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\n\nclass FormError extends Component {\n  render() {\n    const { msgError } = this.props;\n    return <div className=\"col-12 alert alert-danger px-3\">{msgError}</div>;\n  }\n}\n\nexport default FormError;\n","import React, { Component } from \"react\";\nimport firebase from \"./Firebase\";\nimport FormError from \"./FormError\";\nimport { navigate } from \"@reach/router/lib/history\";\n\nclass RegisterUser extends Component {\n  state = {\n    displayName: \"\",\n    email: \"\",\n    passwordOne: \"\",\n    passwordTwo: \"\",\n    errorMsg: null,\n    loading: false,\n    errorTime: true\n  };\n\n  onTimeout = () => {\n    this.setState({ errorTime: false });\n  };\n\n  onChange = event => {\n    const target = event.target.name;\n    const value = event.target.value;\n    this.setState({ [target]: value });\n  };\n\n  onSubmit = event => {\n    event.preventDefault();\n    //  Set state to loading...\n    this.setState({ loading: true });\n    if (this.state.passwordOne !== this.state.passwordTwo) {\n      this.setState({ errorMsg: \"Passwords do not match\" });\n    }\n\n    const registrationInfo = {\n      displayName: this.state.displayName,\n      email: this.state.email,\n      password: this.state.passwordOne\n    };\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(\n        registrationInfo.email,\n        registrationInfo.password\n      )\n      .then(() => {\n        this.props.registerUser(this.state.displayName);\n      })\n      .then(() => {\n        this.setState({ loading: false });\n      })\n      .catch(error => {\n        if (error.message != null) {\n          this.setState({ errorMsg: error.message });\n        } else {\n          this.setState({ errorMsg: null });\n        }\n      });\n\n    navigate(\"/notes\");\n  };\n\n  render() {\n    const { errorTime } = this.props;\n    return (\n      <div>\n        <h1 className=\"form-title\">Registration Form</h1>\n        <form onSubmit={this.onSubmit}>\n          {this.state.errorMsg != null && (\n            <FormError\n              msgError={this.state.errorMsg}\n              timeout={1000}\n              onTimeout={this.onTimeout}\n              errorTime={errorTime}\n            />\n          )}\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            placeholder=\"Name\"\n            value={this.state.displayName}\n            name=\"displayName\"\n            onChange={this.onChange}\n          />\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            value={this.state.email}\n            name=\"email\"\n            onChange={this.onChange}\n            placeholder=\"Email\"\n          />\n\n          <label htmlFor=\"name\">Password</label>\n          <input\n            type=\"password\"\n            value={this.state.passwordOne}\n            name=\"passwordOne\"\n            onChange={this.onChange}\n            placeholder=\"Password\"\n          />\n          <label htmlFor=\"password\">Confirm Password</label>\n          <input\n            type=\"password\"\n            value={this.state.passwordTwo}\n            name=\"passwordTwo\"\n            onChange={this.onChange}\n            placeholder=\"Confirm Password\"\n          />\n          <button>{this.state.loading ? \"Registering...\" : \"Register\"}</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterUser;\n","import React, { Component } from \"react\";\n\nclass NoteList extends Component {\n  render() {\n    const { notes } = this.props;\n    const myNotes = notes.map(item => {\n      return (\n        <div className=\"list-group-item-d-flex\" key={notes.notesID}>\n          <p>{item.notesName}</p>\n        </div>\n      );\n    });\n    return <div>{myNotes}</div>;\n  }\n}\n\nexport default NoteList;\n","import React, { Component } from \"react\";\nimport NoteList from \"./NoteList\";\n\nimport \"../App.css\";\n\nclass Notes extends Component {\n  state = {\n    noteName: \"\"\n  };\n\n  onChange = event => {\n    let name = event.target.name;\n    this.setState({ [name]: event.target.value });\n  };\n\n  onSubmit = event => {\n    event.preventDefault();\n    this.props.addNotes(this.state.noteName);\n    this.setState({ noteName: \"\" });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"text-center all-notes\">\n          All Notes\n          <form className=\"add-form\" onSubmit={this.onSubmit}>\n            <input\n              name=\"noteName\"\n              type=\"text\"\n              placeholder=\"Add a note...\"\n              value={this.state.noteName}\n              onChange={this.onChange}\n            />\n          </form>\n        </div>\n\n        <div className=\"output\">\n          {this.props.notes && this.props.notes.length ? (\n            <div className=\"note-list\">\n              <h4>Note from Firebase</h4>\n            </div>\n          ) : (\n            \"No Notes Found\"\n          )}\n\n          {this.props.notes && (\n            <div className=\"list-group\">\n              <NoteList notes={this.props.notes} />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Notes;\n","import React, { Component } from \"react\";\nimport { navigate } from \"@reach/router/lib/history\";\n\nimport FormError from \"./FormError\";\nimport firebase from \"./Firebase\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    loading: false,\n    errorMsg: null\n  };\n\n  onChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({ [name]: value });\n  };\n\n  onSubmit = event => {\n    event.preventDefault();\n    this.setState({ loading: true });\n    const signedInInfo = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(signedInInfo.email, signedInInfo.password)\n      .then(() => {\n        navigate(\"/notes\");\n      })\n      .then(() => {\n        this.setState({\n          loading: false\n        });\n      })\n      .catch(error => {\n        if (error.message != null) {\n          this.setState({ errorMsg: error.message });\n        } else {\n          this.setState({ errorMsg: null });\n        }\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"form-title\">\n          <i className=\"fas fa-user\" /> Login Form\n        </h1>\n        <form onSubmit={this.onSubmit}>\n          {this.state.errorMsg != null && (\n            <FormError\n              msgError={this.state.errorMsg}\n              timeout={1000}\n              onTimeout={this.onTimeout}\n            />\n          )}\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            placeholder=\"Name\"\n            value={this.state.displayName}\n            name=\"displayName\"\n            onChange={this.onChange}\n          />\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            value={this.state.email}\n            name=\"email\"\n            onChange={this.onChange}\n            placeholder=\"Email\"\n          />\n\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            value={this.state.password}\n            name=\"password\"\n            onChange={this.onChange}\n            placeholder=\"Password\"\n          />\n          <button>\n            {this.state.loading ? <p>Logging in... </p> : \"Log In\"}\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { Router, navigate } from \"@reach/router\";\n\nimport firebase from \"./components/Firebase\";\nimport Navbar from \"./components/Navbar\";\nimport Welcome from \"./components/Welcome\";\nimport Home from \"./components/Home\";\nimport RegisterUser from \"./components/RegisterUser\";\nimport Notes from \"./components/Notes\";\nimport Login from \"./components/Login\";\n\nclass App extends Component {\n  state = {\n    user: null,\n    userID: null,\n    displayName: null\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(firebaseUser => {\n      if (firebaseUser) {\n        this.setState({\n          user: firebaseUser,\n          userID: firebaseUser.uid,\n          displayName: firebaseUser.displayName\n        });\n        // Create a reference to which the items are going to be stored under\n        const notesRef = firebase\n          .database()\n          .ref(`notes/${this.state.firebaseUser.uid}`);\n        // Get the value of the data\n        notesRef.on(\"value\", snapshot => {\n          let notes = snapshot.val();\n          // Set an empty array to which the notes are going to be stored\n          let notesList = [];\n          // Loop through and add to the array\n          for (let item in notes) {\n            notesList.push({\n              noteID: item,\n              notesName: notes[item].noteName\n            });\n          }\n          // Update the state\n          this.setState({\n            notes: notesList,\n            howManyNotes: notesList.length\n          });\n        });\n      } else {\n        this.setState({ displayName: null });\n      }\n    });\n  }\n  // Register user with the display name\n  registerUser = userName => {\n    firebase.auth().onAuthStateChanged(firebaseUser => {\n      firebaseUser\n        .updateProfile({\n          displayName: userName\n        })\n        .then(() => {\n          this.setState({\n            user: firebaseUser,\n            displayName: firebaseUser.displayName,\n            userID: firebaseUser.uid\n          });\n          navigate(\"/notes\");\n        });\n    });\n  };\n\n  // Form for adding note\n  addNotes = noteName => {\n    const ref = firebase.database().ref(`/notes/${this.state.user.uid}`);\n    ref.push({ noteName: noteName });\n  };\n\n  // Method for logging out users\n  logOutUser = event => {\n    event.preventDefault();\n    this.setState({\n      user: null,\n      userID: null,\n      displayName: null\n    });\n\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        navigate(\"/login\");\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <Navbar userName={this.state.user} logOutUser={this.logOutUser} />\n          {this.state.user && <Welcome userName={this.state.displayName} />}\n        </div>\n        <Router>\n          <Home path=\"/\" />\n          <RegisterUser path=\"/register\" registerUser={this.registerUser} />\n          <Notes\n            path=\"/notes\"\n            notes={this.state.notes}\n            addNotes={this.addNotes}\n          />\n          <Login path=\"/login\" />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}